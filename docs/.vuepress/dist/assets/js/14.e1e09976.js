(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{370:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"stylelint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stylelint"}},[t._v("#")]),t._v(" stylelint")]),t._v(" "),a("ul",[a("li",[t._v("安装和使用")]),t._v(" "),a("li",[t._v("添加例外")]),t._v(" "),a("li",[t._v("自动修复")])]),t._v(" "),a("h2",{attrs:{id:"安装和使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装和使用"}},[t._v("#")]),t._v(" 安装和使用")]),t._v(" "),a("h3",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save-dev stylelint\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" styleint --dev\n")])])]),a("h3",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("ol",[a("li",[t._v("新增"),a("code",[t._v(".stylelintrc")]),t._v("文件")]),t._v(" "),a("li",[t._v("在文件中设置规则，以下是笔者部门使用的 css 规范")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        # 缩进 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" 个空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"indentation"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        # 去掉小数点前面的 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"number-leading-zero"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        # 使用双引号\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"string-quotes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"double"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        # 每个属性声明末尾都要加分号\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"declaration-block-trailing-semicolon"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        # 属性值 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 后面不加单位\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"length-zero-no-unit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        # 对空行的处理\n        # 第一条属性声明前不允许有空行\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"declaration-empty-line-before"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ignore"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"after-declaration"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 每个样式规则前后都有空行，除了第一条规则与规则前有注释\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rule-empty-line-before"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" except"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"after-single-line-comment"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"first-nested"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 在结尾 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"}"')]),t._v(" 之前不允许有空行\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"block-closing-brace-empty-line-before"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@"')]),t._v(" 语句之前都有空行，但是忽略 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@"')]),t._v(" 语句在代码块中间与同个非代码块 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@"')]),t._v(" 语句之间的空行这两种情况\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"at-rule-empty-line-before"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ignore"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"inside-block"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blockless-after-same-name-blockless"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 不允许超过一行的空行\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"max-empty-lines"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 每行句末不允许有多余空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"no-eol-whitespace"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 文件末尾需要有一个空行\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"no-missing-end-of-source-newline"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        # 大小写处理\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"unit-case"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lower"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"color-hex-case"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"upper"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value-keyword-case"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lower"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"function-name-case"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lower"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"property-case"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lower"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"at-rule-name-case"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lower"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"selector-pseudo-class-case"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lower"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"selector-pseudo-element-case"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lower"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"selector-type-case"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lower"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"media-feature-name-case"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lower"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        # 对空格的处理\n        # "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{"')]),t._v(" 前必须有空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"block-opening-brace-space-before"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 注释 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/*"')]),t._v(" 后和 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*/"')]),t._v(" 前必须有空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"comment-whitespace-inside"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 属性名 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" 后必须有空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"declaration-colon-space-after"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 属性名 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" 前不能有空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"declaration-colon-space-before"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 声明属性末尾 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('";"')]),t._v(" 前不能有空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"declaration-block-semicolon-space-before"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 属性值中的 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v(" 后必须有空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"function-comma-space-after"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 选择器例如 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"、+、~"')]),t._v(" 前后必须要有空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"selector-combinator-space-before"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"selector-combinator-space-after"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 分隔多个选择器之间的 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v(" 后必须有空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"selector-list-comma-space-after"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 分隔多个选择器之间的 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v(" 前不能有空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"selector-list-comma-space-before"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 子代选择器之间没有额外空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"selector-descendant-combinator-no-non-space"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 多个属性值之间的 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v(" 后必须有空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value-list-comma-space-after"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 多个属性值之间的 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v(" 前不能有空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value-list-comma-space-before"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 媒体查询中设置断点宽度里的 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" 后必须有空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"media-feature-colon-space-after"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        # 媒体查询中设置断点宽度里的 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" 前不能有空格\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"media-feature-colon-space-before"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"规则检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规则检查"}},[t._v("#")]),t._v(" 规则检查")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("stylelint "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'src/**/*.vue'")]),t._v(" --fix\n")])])]),a("p",[t._v("stylelint 命令有时候无法解析到，因为使用了全局的 sylelint，这时可以指定相对路径"),a("code",[t._v("./node_modules/.bin/stylelint")])]),t._v(" "),a("h2",{attrs:{id:"提交-git-时检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交-git-时检查"}},[t._v("#")]),t._v(" 提交 git 时检查")]),t._v(" "),a("p",[t._v("需要用到插件"),a("code",[t._v("husky")]),t._v(",该插件会在 git 提交时，执行"),a("code",[t._v("npm run precommit")]),t._v("命令，所以需要在"),a("code",[t._v("package.json")]),t._v("中添加如下代码检查：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --quiet --ext .js,.vue src"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"style"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"stylelint 'src/**/*.vue' --fix\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"precommit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run lint && npm run style"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("h2",{attrs:{id:"添加例外"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加例外"}},[t._v("#")]),t._v(" 添加例外")]),t._v(" "),a("p",[t._v("在 stylelint 使用过程中，有时候会对某条 css 添加例外，不要适用规则或部分规则")]),t._v(" "),a("h3",{attrs:{id:"关闭全部规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭全部规则"}},[t._v("#")]),t._v(" 关闭全部规则")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* stylelint-disable */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* stylelint-enable */")]),t._v("\n")])])]),a("h3",{attrs:{id:"关闭部分规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭部分规则"}},[t._v("#")]),t._v(" 关闭部分规则")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* stylelint-disable selector-no-id, declaration-no-important   */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#id")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pink "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("!important")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* stylelint-enable */")]),t._v("\n")])])]),a("h2",{attrs:{id:"自动修复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动修复"}},[t._v("#")]),t._v(" 自动修复")]),t._v(" "),a("p",[t._v("有些项目是开发到一半时，添加了 StyleLint 进行 css 约束，这时候需要自动化对不满足条件的 Rule 进行修复，如下是使用到的几种：")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("--fix")]),t._v("命令")]),t._v(" "),a("p",[t._v("该命令能 fix 大部分格式问题，具体哪些规则可以自动 fix 可以看"),a("a",{attrs:{href:"http://stylelint.cn/user-guide/rules/",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Vetur")]),t._v("插件--格式化文件")]),t._v(" "),a("p",[t._v("优点是可以统一格式化文件，缺点是只能单个文件操作")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("vscode-stylefmt")]),t._v("插件")]),t._v(" "),a("p",[t._v("类似 Vetur 插件，但该插件可定制化更多，详情请移至"),a("a",{attrs:{href:"https://github.com/mrmlnc/vscode-stylefmt",target:"_blank",rel:"noopener noreferrer"}},[t._v("github"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("code",[t._v("stylefmt")])]),t._v(" "),a("p",[t._v("该工具也是官方推荐，可以批量修改，使用如下命令修改，详情见 "),a("a",{attrs:{href:"https://github.com/morishitter/stylefmt",target:"_blank",rel:"noopener noreferrer"}},[t._v("github"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("stylefmt --stdin-filename input.css\n")])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);